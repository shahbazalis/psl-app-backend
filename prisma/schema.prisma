// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

model Player {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  admin       Boolean  @default(false)
  password    String
  role        Role
  phoneNumber String
  nationality String
  status      Status
  teamId      String
  team        Team     @relation(fields: [teamId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Team {
  id        String   @id @default(uuid())
  name      String
  players   Player[] // A team has many players
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  BATTER
  BOWLER
  ALLROUNDER
}

enum Status {
  SOLD
  UNSOLD
}
